{
  "name": "表单查询路由列表",
  "desc": "query 传入查询语句的id,结果返回到key;参数全部收集到param;",
  "url": "http://172.16.63.88/formroutequery",
  "urlrest": "http://172.16.63.88:9006/form/rest/",
  "webbase": {
    "url": "http://127.0.0.1",
    "desc": "页面的base url,方便动态页面的静态资源统一定位。"
  },
  "es": {
    "desc": "es-engine 查询设置",
    "htmles": "route-json",
    "esquery": "q6",
    "entrykey": "pkId",
    "htmlrest": "route-json-rest",
    "restquery": "q7"
  },
  "neo4j": {
    "desc": "neo4j-engine 查询设置",
    "username": "neo4j",
    "password": "123456"
  },
  "list": {
    "graphorgdnd": {
      "desc": "编辑树结构 当拖放一个节点时，树将向服务器传递下列参数：id - 被拖拽的节点 id。 targetId - 被放置的节点。todo",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": "WITH {id},{targetId},{point} as result return result",
            "parameters": {
              "id":"{{id}}",
              "targetId": "{{targetId}}",
              "point": "{{point}}"
            }
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },

    "graphorgd": {
      "desc": "批量删除 - 删除对象；清除掉所有关系",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": " UNWIND {deleted}  AS line  MATCH (n:Group{group_id:line.group_id}) OPTIONAL MATCH ()-[r]-(n) DELETE n,r",
            "parameters": {
              "deleted":"{{deleted}}",
              "page": "{{(page==nil or page=='') and 1 or page}}",
              "rows": "{{(rows==nil or rows=='') and 10 or rows}}"
            }
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },
    "graphorgc": {
      "desc": "批量创建 -NEO4J  组织机构，需要处理组织机构的上下级关系。 CQL:创建组织机构；清除上级组织机构；查找上级组织机构；与上级组织机构建立关系 ;删除 EasyUI TreeGrid 产生的 children 的数据，方便数据处理，也可通过 Set 指定属性值 ;Foreach+Case = if 一次多条记录时候使用;单条数据使用 lua-if 模板语法处理",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": "UNWIND {inserted} AS line CREATE  ( group:Group {group_id:line.group_id}) SET group=line ,group.pid=line._parentId        FOREACH(ignoreMe IN CASE line.isroot WHEN null THEN [1] ELSE [] END |   MERGE (groupparent:Group{group_id:line._parentId})  MERGE (groupparent)-[ug:PCGROUP]->(group)   )",
            "parameters": {
              "inserted":"{{ delCollectElement(inserted,'children') }}",
              "page": "{{(page==nil or page=='') and 1 or page}}",
              "rows": "{{(rows==nil or rows=='') and 10 or rows}}"
            }
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },
    "graphorgu": {
      "desc": "批量更新 -NEO4J  组织机构，需要处理组织机构的上下级关系。 CQL:更新组织机构信息；清除上级组织机构；查找上级组织机构；与上级组织机构建立关系 ;删除 EasyUI TreeGrid 产生的 children 的数据，方便数据处理，也可通过 Set 指定属性值 ;Foreach+Case = if 一次多条记录时候使用;单条数据使用 lua-if 模板语法处理；更新角色关系:清除原有的角色关系，重新建立角色关系",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": "UNWIND {updated} AS line  MERGE  ( group:Group {group_id:line.group_id}) SET group=line ,group.pid=line._parentId    MERGE ()-[pcg:PCGROUP]->(group) delete pcg   FOREACH(ignoreMe IN CASE line.isroot WHEN null THEN [1] ELSE [] END |   MERGE (groupparent:Group{group_id:line._parentId})  MERGE (groupparent)-[ug:PCGROUP]->(group)   )             MERGE ( group)-[gr1:GR]->() delete gr1  FOREACH( roleline in  split(line.roles,\",\") |   MERGE(role:Role{role_id:roleline})  MERGE (group)-[gr:GR]->(role)  )  ",
            "parameters": {
              "updated":"{{ delCollectElement(updated,'children') }}",
              "page": "{{(page==nil or page=='') and 1 or page}}",
              "rows": "{{(rows==nil or rows=='') and 10 or rows}}"
            }
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },

    "graphrolelist": {
      "desc": "NEO4J  返回角色列表",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": "MATCH (n:Role) return COLLECT(n)",
            "parameters": {}
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },
    "graphorgtree": {
      "desc": "NEO4J  返回组织结构树",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": "MATCH p=(n:Group {name:{rootname}})-[:PCGROUP*]-(m) WITH COLLECT(p) AS ps  CALL apoc.convert.toTree(ps) yield value   RETURN value;",
            "parameters": {"rootname":"系统-sys","page":1}
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },
    "graphorglist": {
      "desc": "NEO4J  返回组织结构树",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": "MATCH (n:Group) WITH COLLECT(n) AS ps  RETURN ps;",
            "parameters": {}
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },

    "graphhrllist": {
      "desc": "HRL 人才资源库 使用 SKIP LIMIT 进行 分页查询 ；EasyUI分页参数是 page and rows ,三元表达式增加默认数据 ,计算开始记录 (toInt({page})-1)*toInt({rows}),每页记录数 ；支持 lua-template 模板引擎，灵活的组织查询语句，{% if not (searchvalue == nil or searchvalue == '') then %} WHERE n.username=~{searchvalue} AND n.namecn=~{searchvalue} {% end %};",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": "MATCH  (n:HRL) {% if not (searchvalue == nil or searchvalue == '') then %} WHERE n.username=~{searchvalue} OR n.namecn=~{searchvalue} {% end %}    WITH count(*) AS cnt  MATCH  (n:HRL)  {% if not (searchvalue == nil or searchvalue == '') then %} WHERE n.username=~{searchvalue} OR n.namecn=~{searchvalue} {% end %}   WITH   n, cnt SKIP (toInt({page})-1)*toInt({rows}) LIMIT toInt({rows})   RETURN   { total: cnt, rows:collect(n) } AS molecules",
            "parameters": {
              "searchvalue":"{{(searchvalue==nil or searchvalue=='') and '\".*\"' or '\"'..searchvalue..'\"'}}",
              "page": "{{(page==nil or page=='') and 1 or page}}",
              "rows": "{{(rows==nil or rows=='') and 10 or rows}}"
            }
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },
    "graphhrc": {
      "desc": "批量创建与更新 -NEO4J。清除掉所有的与组织机构和角色的关系",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": "UNWIND {inserted} AS line  CREATE (user:HRL {username:line.username}) SET user=line   MERGE (user)-[ur1:UR]->() delete ur1   MERGE (user)-[ug1:UG]->() delete ug1 ",
            "parameters": {
              "inserted":"{{inserted}}",
              "page": "{{(page==nil or page=='') and 1 or page}}",
              "rows": "{{(rows==nil or rows=='') and 10 or rows}}"
            }
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },
    "graphhru": {
      "desc": "批量创建与更新 -NEO4J。清除掉所有的与组织机构和角色的关系",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": "UNWIND {updated} AS line  MERGE (user:HRL {username:line.username}) SET user=line   MERGE (user)-[ur1:UR]->() delete ur1   MERGE (user)-[ug1:UG]->() delete ug1 ",
            "parameters": {
              "updated":"{{updated}}",
              "page": "{{(page==nil or page=='') and 1 or page}}",
              "rows": "{{(rows==nil or rows=='') and 10 or rows}}"
            }
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },

    "graphhrd": {
      "desc": "批量删除 - 清除掉所有关系",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": " UNWIND {deleted}  AS u3  MATCH (n:HRL{username:u3.username}) OPTIONAL MATCH (n)-[r]-() DELETE n,r",
            "parameters": {
              "deleted":"{{deleted}}",
              "page": "{{(page==nil or page=='') and 1 or page}}",
              "rows": "{{(rows==nil or rows=='') and 10 or rows}}"
            }
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },



    "graphuserlist": {
      "desc": "EasyUI二次加载的参数传递;参数{* *}是字符串；{{ }} 是 json 数据;NEO4J  使用 SKIP LIMIT 进行 分页查询 ；EasyUI分页参数是 page and rows ,三元表达式增加默认数据 ,计算开始记录 (toInt({page})-1)*toInt({rows}),每页记录数 ；支持 lua-template 模板引擎，灵活的组织查询语句，{% if not (searchvalue == nil or searchvalue == '') then %} WHERE n.username=~{searchvalue} AND n.namecn=~{searchvalue} {% end %};",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": "{% if not (org ~= nil and org ~= '') then %} 	MATCH (n:User) {% else %}   	MATCH (g:Group)-[r:GU]->(n:User) where g.group_id={org}	{% end %}   {% if not (searchvalue == nil or searchvalue == '') then %}  {% if not (org ~= nil and org ~= '') then %} WHERE   {% else %} and {% end %}   (n.username=~{searchvalue} OR n.namecn=~{searchvalue}) {% end %}  WITH count(*) AS cnt {% if not (org ~= nil and org ~= '') then %} 	MATCH (n:User) {% else %}   	MATCH (g:Group)-[r:GU]->(n:User) where g.group_id={org}	{% end %}   {% if not (searchvalue == nil or searchvalue == '') then %}  {% if not (org ~= nil and org ~= '') then %} WHERE   {% else %} and {% end %}   (n.username=~{searchvalue} OR n.namecn=~{searchvalue}) {% end %} WITH   n, cnt SKIP (toInt({page})-1)*toInt({rows}) LIMIT toInt({rows})   RETURN   { total: cnt, rows:collect(n) } AS molecules",
            "parameters": {
              "searchvalue":"{{(searchvalue==nil or searchvalue=='') and '\".*\"' or '\"'..searchvalue..'\"'}}",
              "org":"{* org *}",
              "page": "{{(page==nil or page=='') and 1 or page}}",
              "rows": "{{(rows==nil or rows=='') and 10 or rows}}"
            }
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },
    "graphuserc": {
      "desc": "批量创建 -NEO4J  进行 crud 数量处理，支持 EasyUI 的acceptChanges特性，增加删除修改都支持批量数据;{{ inserted }} 自动由字符串处理成为 JSON 对象！; [{{inserted}}]数组格式兼容数据为空的场景！",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": "UNWIND {inserted} AS line  CREATE (user:User {username:line.username}) SET user=line   MERGE (user)-[ur1:UR]->() delete ur1  FOREACH( roleline in  split(line.roles,\",\") |   MERGE(role:Role{role_id:roleline})  MERGE (user)-[ur:UR]->(role)  )  MERGE(group:Group{group_id:line.org})  MERGE (user)-[ug1:UG]->() delete ug1  MERGE (user)-[ug:UG]->(group)",
            "parameters": {
              "inserted":"{{inserted}}",
              "page": "{{(page==nil or page=='') and 1 or page}}",
              "rows": "{{(rows==nil or rows=='') and 10 or rows}}"
            }
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },
    "graphuseru": {
      "desc": "批量更新 -NEO4J  进行 crud 数量处理，支持 EasyUI 的acceptChanges特性，增加删除修改都支持批量数据;{{ updated }} 自动由字符串处理成为 JSON 对象！; [{{updated}}]数组格式兼容数据为空的场景！处理用户与组织机构，用户与角色的关联关系，要清除原有的关系。",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": "UNWIND {updated} AS line  MERGE (user:User {username:line.username}) SET user=line   MERGE (user)-[ur1:UR]->() delete ur1  FOREACH( roleline in  split(line.roles,\",\") |   MERGE(role:Role{role_id:roleline})  MERGE (user)-[ur:UR]->(role)  )  MERGE(group:Group{group_id:line.org})  MERGE (user)-[ug1:UG]->() delete ug1  MERGE (user)-[ug:UG]->(group)",
            "parameters": {
              "updated":"{{updated}}",
              "page": "{{(page==nil or page=='') and 1 or page}}",
              "rows": "{{(rows==nil or rows=='') and 10 or rows}}"
            }
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },
    "graphuserd": {
      "desc": "批量删除 -NEO4J  进行 crud 数量处理，支持 EasyUI 的acceptChanges特性，增加删除修改都支持批量数据;{{ deleted }} 自动由字符串处理成为 JSON 对象！; [{{inserted}}]数组格式兼容数据为空的场景！",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": " UNWIND {deleted}  AS u3  MATCH (n:User{username:u3.username}) OPTIONAL MATCH (n)-[r]-() DELETE n,r",
            "parameters": {
              "deleted":"{{deleted}}",
              "page": "{{(page==nil or page=='') and 1 or page}}",
              "rows": "{{(rows==nil or rows=='') and 10 or rows}}"
            }
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },

    "neo4jres": {
      "desc": "NEO4J 查询，参数传递到namevalue ,要求唯一且与url 的参数名称一致",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": "MATCH (x:Resource{name: {name} }) RETURN x",
            "parameters": {
              "name": "namevalue"
            }
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },
    "neo4jsimple": {
      "desc": "NEO4J 查询，参数传递到namevalue ,要求唯一且与url 的参数名称一致",
      "url": "http://172.16.63.88:7474/db/data/transaction/commit",
      "param": {
        "statements": [
          {
            "statement": "MATCH (x:Resource) RETURN x",
            "parameters": {
            }
          }
        ]
      },
      "servertype": "NEO4J",
      "method": "POST"
    },
    "menures": {
      "desc": "管理左侧菜单",
      "url": "http://172.16.63.88:9006/form/rest/resource/search/findAllByPidOrderByModuleAsc",
      "param": {
        "pid": "pid"
      },
      "method": "GET"
    },
    "avatar": {
      "desc": "图片信息查询",
      "url": "http://172.16.63.88:9006/form/rest/avatar",
      "param": {
      },
      "method": "GET"
    },
    "users": {
      "desc": "用户信息查询",
      "url": "http://172.16.63.88:9006/form/rest/user",
      "param": {
        "page": "page",
        "size": "size"
      },
      "method": "GET"
    },
    "q0": {
      "desc": "也适用于没有参数的查询语句",
      "url": "http://127.0.0.1/data/test.json",
      "param": {},
      "method": "GET"
    },
    "q1": {
      "desc": "两个参数spring-data 查询语句；PK/BK 会被对应的同名参数值替换",
      "url": "http://133.224.220.66/formapi/rest/pro",
      "param": {
        "procode": "PK",
        "code": "BK"
      },
      "method": "GET"
    },
    "q2": {
      "desc": "也适用于没有参数的查询语句",
      "url": "http://133.224.220.66/formapi/rest/pro",
      "param": {},
      "method": "GET"
    },
    "q3": {
      "desc": "单个参数的查询语句",
      "url": "http://133.224.220.66/formapi/rest/pro",
      "param": {
        "procode": "PK"
      },
      "method": "GET"
    },
    "q4": {
      "desc": "elaticsearch 的查询语句； XXX and Pid 被同名的参数值替换",
      "url": "http://133.224.220.66/fulltext/mycode/_search",
      "param": {
        "query": {
          "filtered": {
            "query": {
              "query_string": {
                "query": "XXX"
              }
            },
            "filter": {
              "term": {
                "_parents": "PId"
              }
            }
          }
        }
      },
      "servertype": "ES",
      "method": "POST"
    },
    "q5": {
      "desc": "es-query dsl 查询语句 ",
      "url": "http://172.16.63.88:9200/channel/_search",
      "param": {
        "query": {
          "bool": {
            "must": [
              {
                "term": {
                  "name": "namevalue"
                }
              },
              {
                "term": {
                  "code": "codevalue"
                }
              }
            ]
          }
        },
        "sort": {
          "code": {
            "order": "asc"
          },
          "name": {
            "order": "desc"
          }
        },
        "from": "start",
        "size": "size"
      },
      "servertype": "ES",
      "method": "POST"
    },
    "q6": {
      "desc": "extjs 生成的查询通用语句for es-query，q6与q7查询语句一起使用......",
      "url": "http://172.16.63.88:9200/channel/_search",
      "param": {
        "query": {
          "bool": {
            "must": "filterkey"
          }
        },
        "sort": "sortkey",
        "from": "start",
        "size": "size"
      },
      "servertype": "ES",
      "method": "POST"
    },
    "q7": {
      "desc": "extjs filter 查询，es 完成实际的查询返回实体id,spring-data 再根据实体id 查询返回数据",
      "url": "http://172.16.63.88:9006/form/rest/channel_auth/search/findByIdList",
      "param": {
        "pkId": "pkId"
      },
      "method": "GET"
    }
  }
}