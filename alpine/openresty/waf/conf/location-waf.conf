access_by_lua_block {
  local lua_resty_waf = require "resty.waf"

  local waf = lua_resty_waf:new()

  -- define options that will be inherited across all scopes
  waf:set_option("debug", false)
  waf:set_option("mode", "ACTIVE")

  -- this may be desirable for low-traffic or testing sites
  -- by default, event logs are not written until the buffer is full
  -- for testing, flush the log buffer every 5 seconds
  --
  -- this is only necessary when configuring a remote TCP/UDP
  -- socket server for event logs. otherwise, this is ignored
  waf:set_option("event_log_periodic_flush", 5)
  waf:set_option("add_ruleset", "11000_whitelist")
  waf:set_option("add_ruleset", "20000_http_violation")
  waf:set_option("add_ruleset", "21000_http_anomaly")
  waf:set_option("add_ruleset", "35000_user_agent")
  waf:set_option("add_ruleset", "40000_generic_attack")
  waf:set_option("add_ruleset", "41000_sqli")
  waf:set_option("add_ruleset", "42000_xss")
  waf:set_option("add_ruleset", "90000_custom")
  waf:set_option("add_ruleset", "99000_scoring")

  -- send event logs to the server's error_log location (default)
  waf:set_option("event_log_target", "error")
  waf:set_option("event_log_level", ngx.WARN)
  --waf:set_option("event_log_buffer_size", 8192)
  waf:set_option("event_log_request_arguments", true)
  waf:set_option("event_log_request_body", true)
  waf:set_option("event_log_request_headers", true)

  -- send event logs to a local file on disk
  --waf:set_option("event_log_target", "file")
  --waf:set_option("event_log_target_path", "/usr/local/openresty/nginx/logs/waf-event.log")

  -- send event logs to a remote server
  waf:set_option("event_log_target", "socket")
    --默认是 udp
  --waf:set_option("event_log_socket_proto", "tcp")
  waf:set_option("event_log_target_host", "192.168.0.122")
  waf:set_option("event_log_target_port", 9001)


  -- run the firewall
  waf:exec()
}

header_filter_by_lua_block {
  local lua_resty_waf = require "resty.waf"

  -- note that options set in previous handlers (in the same scope)
  -- do not need to be set again
  local waf = lua_resty_waf:new()

  waf:exec()
}

body_filter_by_lua_block {
  local lua_resty_waf = require "resty.waf"

  local waf = lua_resty_waf:new()

  waf:exec()
}

log_by_lua_block {
  local lua_resty_waf = require "resty.waf"

  local waf = lua_resty_waf:new()

  --waf:exec()
  waf:write_log_events()
}